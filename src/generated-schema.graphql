type Query {
  Season(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Season
  Seasons(where: Season_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Seasons
  Product(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Product
  Products(where: Product_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Products
  Customer(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Customer
  Customers(where: Customer_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Customers
  meCustomer: customersMe
  initializedCustomer: Boolean
  Perk(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Perk
  Perks(where: Perk_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Perks
  Order(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Order
  Orders(where: Order_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Orders
  Subscription(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Subscription
  Subscriptions(where: Subscription_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Subscriptions
  Contentpage(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Contentpage
  Contentpages(where: Contentpage_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Contentpages
  Historytask(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Historytask
  Historytasks(where: Historytask_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Historytasks
  Producer(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Producer
  Producers(where: Producer_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Producers
  meProducer: producersMe
  initializedProducer: Boolean
  Upload(id: String!, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Upload
  Uploads(where: Upload_where, draft: Boolean, locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, page: Int, limit: Int, sort: String): Uploads
  Preference(key: String): Preference
  Access: Access
}

type Season {
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  id: String
  start_date: DateTime!
  end_date: DateTime!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum LocaleInputType {
  en
  fr
  es
}

enum FallbackLocaleInputType {
  en
  fr
  es
  none
}

type Seasons {
  docs: [Season]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Season_where {
  name: Season_name_operator
  id: Season_id_operator
  start_date: Season_start_date_operator
  end_date: Season_end_date_operator
  createdAt: Season_createdAt_operator
  updatedAt: Season_updatedAt_operator
  OR: [Season_where_or]
  AND: [Season_where_and]
}

input Season_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Season_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input Season_start_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Season_end_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Season_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Season_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Season_where_or {
  name: Season_name_operator
  id: Season_id_operator
  start_date: Season_start_date_operator
  end_date: Season_end_date_operator
  createdAt: Season_createdAt_operator
  updatedAt: Season_updatedAt_operator
}

input Season_where_and {
  name: Season_name_operator
  id: Season_id_operator
  start_date: Season_start_date_operator
  end_date: Season_end_date_operator
  createdAt: Season_createdAt_operator
  updatedAt: Season_updatedAt_operator
}

type Product {
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String
  id: String
  publishedDate: DateTime
  price: Float!
  inventory: Float
  unit: String
  sizes: [Product_Sizes!]
  seasons(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): [Season!]
  thumbnail(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, where: Product_Thumbnail_where): Upload
  description(depth: Int): JSON
  status: Product_status
}

type Product_Sizes {
  title: String
  size: Float
  adjustment: Float
  id: String
}

type Upload {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String
  caption(depth: Int): JSON
  url: String
  filename: String
  mimeType: String
  filesize: Float
}

input Product_Thumbnail_where {
  title: Product_Thumbnail_title_operator
  caption: Product_Thumbnail_caption_operator
  url: Product_Thumbnail_url_operator
  filename: Product_Thumbnail_filename_operator
  mimeType: Product_Thumbnail_mimeType_operator
  filesize: Product_Thumbnail_filesize_operator
  id: Product_Thumbnail_id_operator
  OR: [Product_Thumbnail_where_or]
  AND: [Product_Thumbnail_where_and]
}

input Product_Thumbnail_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_Thumbnail_caption_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Product_Thumbnail_url_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_Thumbnail_filename_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_Thumbnail_mimeType_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_Thumbnail_filesize_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Product_Thumbnail_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Product_Thumbnail_where_or {
  title: Product_Thumbnail_title_operator
  caption: Product_Thumbnail_caption_operator
  url: Product_Thumbnail_url_operator
  filename: Product_Thumbnail_filename_operator
  mimeType: Product_Thumbnail_mimeType_operator
  filesize: Product_Thumbnail_filesize_operator
  id: Product_Thumbnail_id_operator
}

input Product_Thumbnail_where_and {
  title: Product_Thumbnail_title_operator
  caption: Product_Thumbnail_caption_operator
  url: Product_Thumbnail_url_operator
  filename: Product_Thumbnail_filename_operator
  mimeType: Product_Thumbnail_mimeType_operator
  filesize: Product_Thumbnail_filesize_operator
  id: Product_Thumbnail_id_operator
}

enum Product_status {
  draft
  published
  archived
}

type Products {
  docs: [Product]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Product_where {
  title: Product_title_operator
  id: Product_id_operator
  publishedDate: Product_publishedDate_operator
  price: Product_price_operator
  inventory: Product_inventory_operator
  unit: Product_unit_operator
  sizes__title: Product_sizes__title_operator
  sizes__size: Product_sizes__size_operator
  sizes__adjustment: Product_sizes__adjustment_operator
  sizes__id: Product_sizes__id_operator
  seasons: Product_seasons_operator
  thumbnail: Product_thumbnail_operator
  description: Product_description_operator
  status: Product_status_operator
  createdAt: Product_createdAt_operator
  updatedAt: Product_updatedAt_operator
  OR: [Product_where_or]
  AND: [Product_where_and]
}

input Product_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Product_publishedDate_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Product_price_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
}

input Product_inventory_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Product_unit_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_sizes__title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_sizes__size_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Product_sizes__adjustment_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Product_sizes__id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Product_seasons_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Product_thumbnail_operator {
  equals: String
  not_equals: String
  exists: Boolean
}

input Product_description_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Product_status_operator {
  equals: Product_status_Input
  not_equals: Product_status_Input
  in: [Product_status_Input]
  not_in: [Product_status_Input]
  all: [Product_status_Input]
  exists: Boolean
}

enum Product_status_Input {
  draft
  published
  archived
}

input Product_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Product_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Product_where_or {
  title: Product_title_operator
  id: Product_id_operator
  publishedDate: Product_publishedDate_operator
  price: Product_price_operator
  inventory: Product_inventory_operator
  unit: Product_unit_operator
  sizes__title: Product_sizes__title_operator
  sizes__size: Product_sizes__size_operator
  sizes__adjustment: Product_sizes__adjustment_operator
  sizes__id: Product_sizes__id_operator
  seasons: Product_seasons_operator
  thumbnail: Product_thumbnail_operator
  description: Product_description_operator
  status: Product_status_operator
  createdAt: Product_createdAt_operator
  updatedAt: Product_updatedAt_operator
}

input Product_where_and {
  title: Product_title_operator
  id: Product_id_operator
  publishedDate: Product_publishedDate_operator
  price: Product_price_operator
  inventory: Product_inventory_operator
  unit: Product_unit_operator
  sizes__title: Product_sizes__title_operator
  sizes__size: Product_sizes__size_operator
  sizes__adjustment: Product_sizes__adjustment_operator
  sizes__id: Product_sizes__id_operator
  seasons: Product_seasons_operator
  thumbnail: Product_thumbnail_operator
  description: Product_description_operator
  status: Product_status_operator
  createdAt: Product_createdAt_operator
  updatedAt: Product_updatedAt_operator
}

type Customer {
  createdAt: DateTime!
  updatedAt: DateTime!
  payment_provider_id: String
  payment_methods: String
  id: String
  name: String
  phone: String
  shipping_address: String
  status: Customer_status
  perks(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): [Perk!]
  accepts_newsletter: Boolean
  notes(depth: Int): JSON
  email: EmailAddress
  resetPasswordToken: String
  resetPasswordExpiration: DateTime
  loginAttempts: Float
  lockUntil: DateTime
  password: String!
}

enum Customer_status {
  active
  archived
}

type Perk {
  title: String
  id: String
  description: String
  season(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Season
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

type Customers {
  docs: [Customer]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Customer_where {
  payment_provider_id: Customer_payment_provider_id_operator
  payment_methods: Customer_payment_methods_operator
  id: Customer_id_operator
  name: Customer_name_operator
  phone: Customer_phone_operator
  shipping_address: Customer_shipping_address_operator
  status: Customer_status_operator
  perks: Customer_perks_operator
  accepts_newsletter: Customer_accepts_newsletter_operator
  notes: Customer_notes_operator
  email: Customer_email_operator
  createdAt: Customer_createdAt_operator
  updatedAt: Customer_updatedAt_operator
  OR: [Customer_where_or]
  AND: [Customer_where_and]
}

input Customer_payment_provider_id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Customer_payment_methods_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Customer_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Customer_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Customer_phone_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Customer_shipping_address_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Customer_status_operator {
  equals: Customer_status_Input
  not_equals: Customer_status_Input
  in: [Customer_status_Input]
  not_in: [Customer_status_Input]
  all: [Customer_status_Input]
  exists: Boolean
}

enum Customer_status_Input {
  active
  archived
}

input Customer_perks_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Customer_accepts_newsletter_operator {
  equals: Boolean
  not_equals: Boolean
  exists: Boolean
}

input Customer_notes_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Customer_email_operator {
  equals: EmailAddress
  not_equals: EmailAddress
  like: EmailAddress
  contains: EmailAddress
  exists: Boolean
}

input Customer_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Customer_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Customer_where_or {
  payment_provider_id: Customer_payment_provider_id_operator
  payment_methods: Customer_payment_methods_operator
  id: Customer_id_operator
  name: Customer_name_operator
  phone: Customer_phone_operator
  shipping_address: Customer_shipping_address_operator
  status: Customer_status_operator
  perks: Customer_perks_operator
  accepts_newsletter: Customer_accepts_newsletter_operator
  notes: Customer_notes_operator
  email: Customer_email_operator
  createdAt: Customer_createdAt_operator
  updatedAt: Customer_updatedAt_operator
}

input Customer_where_and {
  payment_provider_id: Customer_payment_provider_id_operator
  payment_methods: Customer_payment_methods_operator
  id: Customer_id_operator
  name: Customer_name_operator
  phone: Customer_phone_operator
  shipping_address: Customer_shipping_address_operator
  status: Customer_status_operator
  perks: Customer_perks_operator
  accepts_newsletter: Customer_accepts_newsletter_operator
  notes: Customer_notes_operator
  email: Customer_email_operator
  createdAt: Customer_createdAt_operator
  updatedAt: Customer_updatedAt_operator
}

type customersMe {
  token: String
  user: Customer
  exp: Int
  collection: String
}

type Perks {
  docs: [Perk]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Perk_where {
  title: Perk_title_operator
  id: Perk_id_operator
  description: Perk_description_operator
  season: Perk_season_operator
  OR: [Perk_where_or]
  AND: [Perk_where_and]
}

input Perk_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Perk_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Perk_description_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Perk_season_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Perk_where_or {
  title: Perk_title_operator
  id: Perk_id_operator
  description: Perk_description_operator
  season: Perk_season_operator
}

input Perk_where_and {
  title: Perk_title_operator
  id: Perk_id_operator
  description: Perk_description_operator
  season: Perk_season_operator
}

type Order {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: String
  email: String
  shipping_address: String
  season(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Season
  placed_by(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Order_Placed_by_Relationship
  line_items: [Order_Line_items!]
  subscription(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Subscription
  notes(depth: Int): JSON
  status: Order_status
  total: Float
}

type Order_Placed_by_Relationship {
  relationTo: Order_Placed_by_RelationTo
  value: Order_Placed_by
}

enum Order_Placed_by_RelationTo {
  customers
  producers
}

union Order_Placed_by = Customer | Producer

type Producer {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  phone: String
  shipping_address: String
  enableAPIKey: Boolean
  apiKey: String
  apiKeyIndex: String
  email: EmailAddress
  resetPasswordToken: String
  resetPasswordExpiration: DateTime
  loginAttempts: Float
  lockUntil: DateTime
  password: String!
}

type Order_Line_items {
  description: String
  quantity: Float
  size: Float
  product(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Product
  status: Order_Line_items_status
  id: String
}

enum Order_Line_items_status {
  processing
  cancelled
  fulfilled
}

type Subscription {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: String
  placed_by(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Subscription_Placed_by_Relationship
  schedule: Subscription_Schedule
  season(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Season
  notes(depth: Int): JSON
  status: Subscription_status
  total: Float
}

type Subscription_Placed_by_Relationship {
  relationTo: Subscription_Placed_by_RelationTo
  value: Subscription_Placed_by
}

enum Subscription_Placed_by_RelationTo {
  customers
  producers
}

union Subscription_Placed_by = Customer | Producer

type Subscription_Schedule {
  start_date: DateTime!
  end_date: DateTime
  interval: String
}

enum Subscription_status {
  active
  cancelled
}

enum Order_status {
  processing
  cancelled
  fulfilled
}

type Orders {
  docs: [Order]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Order_where {
  id: Order_id_operator
  email: Order_email_operator
  shipping_address: Order_shipping_address_operator
  season: Order_season_operator
  placed_by: Order_placed_by_Relation
  line_items__description: Order_line_items__description_operator
  line_items__quantity: Order_line_items__quantity_operator
  line_items__size: Order_line_items__size_operator
  line_items__product: Order_line_items__product_operator
  line_items__status: Order_line_items__status_operator
  line_items__id: Order_line_items__id_operator
  subscription: Order_subscription_operator
  notes: Order_notes_operator
  status: Order_status_operator
  total: Order_total_operator
  createdAt: Order_createdAt_operator
  updatedAt: Order_updatedAt_operator
  OR: [Order_where_or]
  AND: [Order_where_and]
}

input Order_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Order_email_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Order_shipping_address_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Order_season_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Order_placed_by_Relation {
  relationTo: Order_placed_by_Relation_RelationTo
  value: String
}

enum Order_placed_by_Relation_RelationTo {
  customers
  producers
}

input Order_line_items__description_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Order_line_items__quantity_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Order_line_items__size_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Order_line_items__product_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Order_line_items__status_operator {
  equals: Order_line_items__status_Input
  not_equals: Order_line_items__status_Input
  in: [Order_line_items__status_Input]
  not_in: [Order_line_items__status_Input]
  all: [Order_line_items__status_Input]
  exists: Boolean
}

enum Order_line_items__status_Input {
  processing
  cancelled
  fulfilled
}

input Order_line_items__id_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Order_subscription_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Order_notes_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Order_status_operator {
  equals: Order_status_Input
  not_equals: Order_status_Input
  in: [Order_status_Input]
  not_in: [Order_status_Input]
  all: [Order_status_Input]
  exists: Boolean
}

enum Order_status_Input {
  processing
  cancelled
  fulfilled
}

input Order_total_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Order_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Order_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Order_where_or {
  id: Order_id_operator
  email: Order_email_operator
  shipping_address: Order_shipping_address_operator
  season: Order_season_operator
  placed_by: Order_placed_by_Relation
  line_items__description: Order_line_items__description_operator
  line_items__quantity: Order_line_items__quantity_operator
  line_items__size: Order_line_items__size_operator
  line_items__product: Order_line_items__product_operator
  line_items__status: Order_line_items__status_operator
  line_items__id: Order_line_items__id_operator
  subscription: Order_subscription_operator
  notes: Order_notes_operator
  status: Order_status_operator
  total: Order_total_operator
  createdAt: Order_createdAt_operator
  updatedAt: Order_updatedAt_operator
}

input Order_where_and {
  id: Order_id_operator
  email: Order_email_operator
  shipping_address: Order_shipping_address_operator
  season: Order_season_operator
  placed_by: Order_placed_by_Relation
  line_items__description: Order_line_items__description_operator
  line_items__quantity: Order_line_items__quantity_operator
  line_items__size: Order_line_items__size_operator
  line_items__product: Order_line_items__product_operator
  line_items__status: Order_line_items__status_operator
  line_items__id: Order_line_items__id_operator
  subscription: Order_subscription_operator
  notes: Order_notes_operator
  status: Order_status_operator
  total: Order_total_operator
  createdAt: Order_createdAt_operator
  updatedAt: Order_updatedAt_operator
}

type Subscriptions {
  docs: [Subscription]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Subscription_where {
  id: Subscription_id_operator
  placed_by: Subscription_placed_by_Relation
  start_date: Subscription_start_date_operator
  end_date: Subscription_end_date_operator
  schedule__interval: Subscription_schedule__interval_operator
  season: Subscription_season_operator
  notes: Subscription_notes_operator
  status: Subscription_status_operator
  total: Subscription_total_operator
  createdAt: Subscription_createdAt_operator
  updatedAt: Subscription_updatedAt_operator
  OR: [Subscription_where_or]
  AND: [Subscription_where_and]
}

input Subscription_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Subscription_placed_by_Relation {
  relationTo: Subscription_placed_by_Relation_RelationTo
  value: String
}

enum Subscription_placed_by_Relation_RelationTo {
  customers
  producers
}

input Subscription_start_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Subscription_end_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Subscription_schedule__interval_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Subscription_season_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Subscription_notes_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Subscription_status_operator {
  equals: Subscription_status_Input
  not_equals: Subscription_status_Input
  in: [Subscription_status_Input]
  not_in: [Subscription_status_Input]
  all: [Subscription_status_Input]
  exists: Boolean
}

enum Subscription_status_Input {
  active
  cancelled
}

input Subscription_total_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Subscription_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Subscription_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Subscription_where_or {
  id: Subscription_id_operator
  placed_by: Subscription_placed_by_Relation
  start_date: Subscription_start_date_operator
  end_date: Subscription_end_date_operator
  schedule__interval: Subscription_schedule__interval_operator
  season: Subscription_season_operator
  notes: Subscription_notes_operator
  status: Subscription_status_operator
  total: Subscription_total_operator
  createdAt: Subscription_createdAt_operator
  updatedAt: Subscription_updatedAt_operator
}

input Subscription_where_and {
  id: Subscription_id_operator
  placed_by: Subscription_placed_by_Relation
  start_date: Subscription_start_date_operator
  end_date: Subscription_end_date_operator
  schedule__interval: Subscription_schedule__interval_operator
  season: Subscription_season_operator
  notes: Subscription_notes_operator
  status: Subscription_status_operator
  total: Subscription_total_operator
  createdAt: Subscription_createdAt_operator
  updatedAt: Subscription_updatedAt_operator
}

type Contentpage {
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String
  id: String
  author(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Producer
  publishedDate: DateTime
  index: Boolean
  seasons(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): [Season!]
  content: [Contentpage_Content!]
  status: Contentpage_status
}

union Contentpage_Content = Text | ProductsList

type Text {
  title: String
  id: String
  media(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType, where: Text_Media_where): Upload
  text(depth: Int): JSON
  blockName: String
  blockType: String
}

input Text_Media_where {
  title: Text_Media_title_operator
  caption: Text_Media_caption_operator
  url: Text_Media_url_operator
  filename: Text_Media_filename_operator
  mimeType: Text_Media_mimeType_operator
  filesize: Text_Media_filesize_operator
  id: Text_Media_id_operator
  OR: [Text_Media_where_or]
  AND: [Text_Media_where_and]
}

input Text_Media_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Text_Media_caption_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Text_Media_url_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Text_Media_filename_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Text_Media_mimeType_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Text_Media_filesize_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Text_Media_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Text_Media_where_or {
  title: Text_Media_title_operator
  caption: Text_Media_caption_operator
  url: Text_Media_url_operator
  filename: Text_Media_filename_operator
  mimeType: Text_Media_mimeType_operator
  filesize: Text_Media_filesize_operator
  id: Text_Media_id_operator
}

input Text_Media_where_and {
  title: Text_Media_title_operator
  caption: Text_Media_caption_operator
  url: Text_Media_url_operator
  filename: Text_Media_filename_operator
  mimeType: Text_Media_mimeType_operator
  filesize: Text_Media_filesize_operator
  id: Text_Media_id_operator
}

type ProductsList {
  title: String
  id: String
  products(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): [Product!]
  blockName: String
  blockType: String
}

enum Contentpage_status {
  draft
  published
  archived
}

type Contentpages {
  docs: [Contentpage]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Contentpage_where {
  title: Contentpage_title_operator
  id: Contentpage_id_operator
  author: Contentpage_author_operator
  publishedDate: Contentpage_publishedDate_operator
  index: Contentpage_index_operator
  seasons: Contentpage_seasons_operator
  status: Contentpage_status_operator
  createdAt: Contentpage_createdAt_operator
  updatedAt: Contentpage_updatedAt_operator
  OR: [Contentpage_where_or]
  AND: [Contentpage_where_and]
}

input Contentpage_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Contentpage_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Contentpage_author_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Contentpage_publishedDate_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Contentpage_index_operator {
  equals: Boolean
  not_equals: Boolean
  exists: Boolean
}

input Contentpage_seasons_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Contentpage_status_operator {
  equals: Contentpage_status_Input
  not_equals: Contentpage_status_Input
  in: [Contentpage_status_Input]
  not_in: [Contentpage_status_Input]
  all: [Contentpage_status_Input]
  exists: Boolean
}

enum Contentpage_status_Input {
  draft
  published
  archived
}

input Contentpage_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Contentpage_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Contentpage_where_or {
  title: Contentpage_title_operator
  id: Contentpage_id_operator
  author: Contentpage_author_operator
  publishedDate: Contentpage_publishedDate_operator
  index: Contentpage_index_operator
  seasons: Contentpage_seasons_operator
  status: Contentpage_status_operator
  createdAt: Contentpage_createdAt_operator
  updatedAt: Contentpage_updatedAt_operator
}

input Contentpage_where_and {
  title: Contentpage_title_operator
  id: Contentpage_id_operator
  author: Contentpage_author_operator
  publishedDate: Contentpage_publishedDate_operator
  index: Contentpage_index_operator
  seasons: Contentpage_seasons_operator
  status: Contentpage_status_operator
  createdAt: Contentpage_createdAt_operator
  updatedAt: Contentpage_updatedAt_operator
}

type Historytask {
  id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String
  task: String!
  count: Float
  product(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Product
  date: DateTime!
  season(locale: LocaleInputType, fallbackLocale: FallbackLocaleInputType): Season
  notes(depth: Int): JSON
}

type Historytasks {
  docs: [Historytask]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Historytask_where {
  description: Historytask_description_operator
  task: Historytask_task_operator
  count: Historytask_count_operator
  product: Historytask_product_operator
  date: Historytask_date_operator
  season: Historytask_season_operator
  notes: Historytask_notes_operator
  id: Historytask_id_operator
  createdAt: Historytask_createdAt_operator
  updatedAt: Historytask_updatedAt_operator
  OR: [Historytask_where_or]
  AND: [Historytask_where_and]
}

input Historytask_description_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Historytask_task_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
}

input Historytask_count_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Historytask_product_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Historytask_date_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
}

input Historytask_season_operator {
  equals: String
  not_equals: String
  in: [String]
  not_in: [String]
  all: [String]
  exists: Boolean
}

input Historytask_notes_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Historytask_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Historytask_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Historytask_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Historytask_where_or {
  description: Historytask_description_operator
  task: Historytask_task_operator
  count: Historytask_count_operator
  product: Historytask_product_operator
  date: Historytask_date_operator
  season: Historytask_season_operator
  notes: Historytask_notes_operator
  id: Historytask_id_operator
  createdAt: Historytask_createdAt_operator
  updatedAt: Historytask_updatedAt_operator
}

input Historytask_where_and {
  description: Historytask_description_operator
  task: Historytask_task_operator
  count: Historytask_count_operator
  product: Historytask_product_operator
  date: Historytask_date_operator
  season: Historytask_season_operator
  notes: Historytask_notes_operator
  id: Historytask_id_operator
  createdAt: Historytask_createdAt_operator
  updatedAt: Historytask_updatedAt_operator
}

type Producers {
  docs: [Producer]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Producer_where {
  name: Producer_name_operator
  phone: Producer_phone_operator
  shipping_address: Producer_shipping_address_operator
  enableAPIKey: Producer_enableAPIKey_operator
  apiKey: Producer_apiKey_operator
  email: Producer_email_operator
  id: Producer_id_operator
  createdAt: Producer_createdAt_operator
  updatedAt: Producer_updatedAt_operator
  OR: [Producer_where_or]
  AND: [Producer_where_and]
}

input Producer_name_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Producer_phone_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Producer_shipping_address_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Producer_enableAPIKey_operator {
  equals: Boolean
  not_equals: Boolean
  exists: Boolean
}

input Producer_apiKey_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Producer_email_operator {
  equals: EmailAddress
  not_equals: EmailAddress
  like: EmailAddress
  contains: EmailAddress
  exists: Boolean
}

input Producer_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Producer_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Producer_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Producer_where_or {
  name: Producer_name_operator
  phone: Producer_phone_operator
  shipping_address: Producer_shipping_address_operator
  enableAPIKey: Producer_enableAPIKey_operator
  apiKey: Producer_apiKey_operator
  email: Producer_email_operator
  id: Producer_id_operator
  createdAt: Producer_createdAt_operator
  updatedAt: Producer_updatedAt_operator
}

input Producer_where_and {
  name: Producer_name_operator
  phone: Producer_phone_operator
  shipping_address: Producer_shipping_address_operator
  enableAPIKey: Producer_enableAPIKey_operator
  apiKey: Producer_apiKey_operator
  email: Producer_email_operator
  id: Producer_id_operator
  createdAt: Producer_createdAt_operator
  updatedAt: Producer_updatedAt_operator
}

type producersMe {
  token: String
  user: Producer
  exp: Int
  collection: String
}

type Uploads {
  docs: [Upload]
  totalDocs: Int
  offset: Int
  limit: Int
  totalPages: Int
  page: Int
  pagingCounter: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  prevPage: Boolean
  nextPage: Boolean
}

input Upload_where {
  title: Upload_title_operator
  caption: Upload_caption_operator
  url: Upload_url_operator
  filename: Upload_filename_operator
  mimeType: Upload_mimeType_operator
  filesize: Upload_filesize_operator
  id: Upload_id_operator
  createdAt: Upload_createdAt_operator
  updatedAt: Upload_updatedAt_operator
  OR: [Upload_where_or]
  AND: [Upload_where_and]
}

input Upload_title_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Upload_caption_operator {
  equals: JSON
  not_equals: JSON
  like: JSON
  contains: JSON
  exists: Boolean
}

input Upload_url_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Upload_filename_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Upload_mimeType_operator {
  equals: String
  not_equals: String
  like: String
  contains: String
  exists: Boolean
}

input Upload_filesize_operator {
  equals: Float
  not_equals: Float
  greater_than_equal: Float
  greater_than: Float
  less_than_equal: Float
  less_than: Float
  exists: Boolean
}

input Upload_id_operator {
  equals: JSON
  not_equals: JSON
  in: [JSON]
  not_in: [JSON]
  all: [JSON]
  exists: Boolean
}

input Upload_createdAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Upload_updatedAt_operator {
  equals: DateTime
  not_equals: DateTime
  greater_than_equal: DateTime
  greater_than: DateTime
  less_than_equal: DateTime
  less_than: DateTime
  like: DateTime
  exists: Boolean
}

input Upload_where_or {
  title: Upload_title_operator
  caption: Upload_caption_operator
  url: Upload_url_operator
  filename: Upload_filename_operator
  mimeType: Upload_mimeType_operator
  filesize: Upload_filesize_operator
  id: Upload_id_operator
  createdAt: Upload_createdAt_operator
  updatedAt: Upload_updatedAt_operator
}

input Upload_where_and {
  title: Upload_title_operator
  caption: Upload_caption_operator
  url: Upload_url_operator
  filename: Upload_filename_operator
  mimeType: Upload_mimeType_operator
  filesize: Upload_filesize_operator
  id: Upload_id_operator
  createdAt: Upload_createdAt_operator
  updatedAt: Upload_updatedAt_operator
}

type Preference {
  key: String!
  value: JSON
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Access {
  canAccessAdmin: Boolean!
  seasons: SeasonAccess
  products: ProductAccess
  customers: CustomerAccess
  perks: PerkAccess
  orders: OrderAccess
  subscriptions: SubscriptionAccess
  content_pages: ContentpageAccess
  history_tasks: HistorytaskAccess
  producers: ProducerAccess
  uploads: UploadAccess
}

type SeasonAccess {
  fields: SeasonFields
  create: SeasonCreateAccess
  read: SeasonReadAccess
  update: SeasonUpdateAccess
  delete: SeasonDeleteAccess
}

type SeasonFields {
  name: SeasonFields_name
  id: SeasonFields_id
  start_date: SeasonFields_start_date
  end_date: SeasonFields_end_date
}

type SeasonFields_name {
  create: SeasonFields_name_Create
  read: SeasonFields_name_Read
  update: SeasonFields_name_Update
  delete: SeasonFields_name_Delete
}

type SeasonFields_name_Create {
  permission: Boolean!
}

type SeasonFields_name_Read {
  permission: Boolean!
}

type SeasonFields_name_Update {
  permission: Boolean!
}

type SeasonFields_name_Delete {
  permission: Boolean!
}

type SeasonFields_id {
  create: SeasonFields_id_Create
  read: SeasonFields_id_Read
  update: SeasonFields_id_Update
  delete: SeasonFields_id_Delete
}

type SeasonFields_id_Create {
  permission: Boolean!
}

type SeasonFields_id_Read {
  permission: Boolean!
}

type SeasonFields_id_Update {
  permission: Boolean!
}

type SeasonFields_id_Delete {
  permission: Boolean!
}

type SeasonFields_start_date {
  create: SeasonFields_start_date_Create
  read: SeasonFields_start_date_Read
  update: SeasonFields_start_date_Update
  delete: SeasonFields_start_date_Delete
}

type SeasonFields_start_date_Create {
  permission: Boolean!
}

type SeasonFields_start_date_Read {
  permission: Boolean!
}

type SeasonFields_start_date_Update {
  permission: Boolean!
}

type SeasonFields_start_date_Delete {
  permission: Boolean!
}

type SeasonFields_end_date {
  create: SeasonFields_end_date_Create
  read: SeasonFields_end_date_Read
  update: SeasonFields_end_date_Update
  delete: SeasonFields_end_date_Delete
}

type SeasonFields_end_date_Create {
  permission: Boolean!
}

type SeasonFields_end_date_Read {
  permission: Boolean!
}

type SeasonFields_end_date_Update {
  permission: Boolean!
}

type SeasonFields_end_date_Delete {
  permission: Boolean!
}

type SeasonCreateAccess {
  permission: Boolean!
  where: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type SeasonReadAccess {
  permission: Boolean!
  where: JSONObject
}

type SeasonUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type SeasonDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type ProductAccess {
  fields: ProductFields
  create: ProductCreateAccess
  read: ProductReadAccess
  update: ProductUpdateAccess
  delete: ProductDeleteAccess
}

type ProductFields {
  title: ProductFields_title
  id: ProductFields_id
  publishedDate: ProductFields_publishedDate
  price: ProductFields_price
  inventory: ProductFields_inventory
  unit: ProductFields_unit
  sizes: ProductFields_sizes
  seasons: ProductFields_seasons
  thumbnail: ProductFields_thumbnail
  description: ProductFields_description
  status: ProductFields_status
}

type ProductFields_title {
  create: ProductFields_title_Create
  read: ProductFields_title_Read
  update: ProductFields_title_Update
  delete: ProductFields_title_Delete
}

type ProductFields_title_Create {
  permission: Boolean!
}

type ProductFields_title_Read {
  permission: Boolean!
}

type ProductFields_title_Update {
  permission: Boolean!
}

type ProductFields_title_Delete {
  permission: Boolean!
}

type ProductFields_id {
  create: ProductFields_id_Create
  read: ProductFields_id_Read
  update: ProductFields_id_Update
  delete: ProductFields_id_Delete
}

type ProductFields_id_Create {
  permission: Boolean!
}

type ProductFields_id_Read {
  permission: Boolean!
}

type ProductFields_id_Update {
  permission: Boolean!
}

type ProductFields_id_Delete {
  permission: Boolean!
}

type ProductFields_publishedDate {
  create: ProductFields_publishedDate_Create
  read: ProductFields_publishedDate_Read
  update: ProductFields_publishedDate_Update
  delete: ProductFields_publishedDate_Delete
}

type ProductFields_publishedDate_Create {
  permission: Boolean!
}

type ProductFields_publishedDate_Read {
  permission: Boolean!
}

type ProductFields_publishedDate_Update {
  permission: Boolean!
}

type ProductFields_publishedDate_Delete {
  permission: Boolean!
}

type ProductFields_price {
  create: ProductFields_price_Create
  read: ProductFields_price_Read
  update: ProductFields_price_Update
  delete: ProductFields_price_Delete
}

type ProductFields_price_Create {
  permission: Boolean!
}

type ProductFields_price_Read {
  permission: Boolean!
}

type ProductFields_price_Update {
  permission: Boolean!
}

type ProductFields_price_Delete {
  permission: Boolean!
}

type ProductFields_inventory {
  create: ProductFields_inventory_Create
  read: ProductFields_inventory_Read
  update: ProductFields_inventory_Update
  delete: ProductFields_inventory_Delete
}

type ProductFields_inventory_Create {
  permission: Boolean!
}

type ProductFields_inventory_Read {
  permission: Boolean!
}

type ProductFields_inventory_Update {
  permission: Boolean!
}

type ProductFields_inventory_Delete {
  permission: Boolean!
}

type ProductFields_unit {
  create: ProductFields_unit_Create
  read: ProductFields_unit_Read
  update: ProductFields_unit_Update
  delete: ProductFields_unit_Delete
}

type ProductFields_unit_Create {
  permission: Boolean!
}

type ProductFields_unit_Read {
  permission: Boolean!
}

type ProductFields_unit_Update {
  permission: Boolean!
}

type ProductFields_unit_Delete {
  permission: Boolean!
}

type ProductFields_sizes {
  create: ProductFields_sizes_Create
  read: ProductFields_sizes_Read
  update: ProductFields_sizes_Update
  delete: ProductFields_sizes_Delete
  fields: ProductFields_sizes_Fields
}

type ProductFields_sizes_Create {
  permission: Boolean!
}

type ProductFields_sizes_Read {
  permission: Boolean!
}

type ProductFields_sizes_Update {
  permission: Boolean!
}

type ProductFields_sizes_Delete {
  permission: Boolean!
}

type ProductFields_sizes_Fields {
  title: ProductFields_sizes_title
  size: ProductFields_sizes_size
  adjustment: ProductFields_sizes_adjustment
  id: ProductFields_sizes_id
}

type ProductFields_sizes_title {
  create: ProductFields_sizes_title_Create
  read: ProductFields_sizes_title_Read
  update: ProductFields_sizes_title_Update
  delete: ProductFields_sizes_title_Delete
}

type ProductFields_sizes_title_Create {
  permission: Boolean!
}

type ProductFields_sizes_title_Read {
  permission: Boolean!
}

type ProductFields_sizes_title_Update {
  permission: Boolean!
}

type ProductFields_sizes_title_Delete {
  permission: Boolean!
}

type ProductFields_sizes_size {
  create: ProductFields_sizes_size_Create
  read: ProductFields_sizes_size_Read
  update: ProductFields_sizes_size_Update
  delete: ProductFields_sizes_size_Delete
}

type ProductFields_sizes_size_Create {
  permission: Boolean!
}

type ProductFields_sizes_size_Read {
  permission: Boolean!
}

type ProductFields_sizes_size_Update {
  permission: Boolean!
}

type ProductFields_sizes_size_Delete {
  permission: Boolean!
}

type ProductFields_sizes_adjustment {
  create: ProductFields_sizes_adjustment_Create
  read: ProductFields_sizes_adjustment_Read
  update: ProductFields_sizes_adjustment_Update
  delete: ProductFields_sizes_adjustment_Delete
}

type ProductFields_sizes_adjustment_Create {
  permission: Boolean!
}

type ProductFields_sizes_adjustment_Read {
  permission: Boolean!
}

type ProductFields_sizes_adjustment_Update {
  permission: Boolean!
}

type ProductFields_sizes_adjustment_Delete {
  permission: Boolean!
}

type ProductFields_sizes_id {
  create: ProductFields_sizes_id_Create
  read: ProductFields_sizes_id_Read
  update: ProductFields_sizes_id_Update
  delete: ProductFields_sizes_id_Delete
}

type ProductFields_sizes_id_Create {
  permission: Boolean!
}

type ProductFields_sizes_id_Read {
  permission: Boolean!
}

type ProductFields_sizes_id_Update {
  permission: Boolean!
}

type ProductFields_sizes_id_Delete {
  permission: Boolean!
}

type ProductFields_seasons {
  create: ProductFields_seasons_Create
  read: ProductFields_seasons_Read
  update: ProductFields_seasons_Update
  delete: ProductFields_seasons_Delete
}

type ProductFields_seasons_Create {
  permission: Boolean!
}

type ProductFields_seasons_Read {
  permission: Boolean!
}

type ProductFields_seasons_Update {
  permission: Boolean!
}

type ProductFields_seasons_Delete {
  permission: Boolean!
}

type ProductFields_thumbnail {
  create: ProductFields_thumbnail_Create
  read: ProductFields_thumbnail_Read
  update: ProductFields_thumbnail_Update
  delete: ProductFields_thumbnail_Delete
}

type ProductFields_thumbnail_Create {
  permission: Boolean!
}

type ProductFields_thumbnail_Read {
  permission: Boolean!
}

type ProductFields_thumbnail_Update {
  permission: Boolean!
}

type ProductFields_thumbnail_Delete {
  permission: Boolean!
}

type ProductFields_description {
  create: ProductFields_description_Create
  read: ProductFields_description_Read
  update: ProductFields_description_Update
  delete: ProductFields_description_Delete
}

type ProductFields_description_Create {
  permission: Boolean!
}

type ProductFields_description_Read {
  permission: Boolean!
}

type ProductFields_description_Update {
  permission: Boolean!
}

type ProductFields_description_Delete {
  permission: Boolean!
}

type ProductFields_status {
  create: ProductFields_status_Create
  read: ProductFields_status_Read
  update: ProductFields_status_Update
  delete: ProductFields_status_Delete
}

type ProductFields_status_Create {
  permission: Boolean!
}

type ProductFields_status_Read {
  permission: Boolean!
}

type ProductFields_status_Update {
  permission: Boolean!
}

type ProductFields_status_Delete {
  permission: Boolean!
}

type ProductCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type ProductReadAccess {
  permission: Boolean!
  where: JSONObject
}

type ProductUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type ProductDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type CustomerAccess {
  fields: CustomerFields
  create: CustomerCreateAccess
  read: CustomerReadAccess
  update: CustomerUpdateAccess
  delete: CustomerDeleteAccess
  unlock: CustomerUnlockAccess
}

type CustomerFields {
  payment_provider_id: CustomerFields_payment_provider_id
  payment_methods: CustomerFields_payment_methods
  id: CustomerFields_id
  name: CustomerFields_name
  phone: CustomerFields_phone
  shipping_address: CustomerFields_shipping_address
  status: CustomerFields_status
  perks: CustomerFields_perks
  accepts_newsletter: CustomerFields_accepts_newsletter
  notes: CustomerFields_notes
  email: CustomerFields_email
  password: CustomerFields_password
}

type CustomerFields_payment_provider_id {
  create: CustomerFields_payment_provider_id_Create
  read: CustomerFields_payment_provider_id_Read
  update: CustomerFields_payment_provider_id_Update
  delete: CustomerFields_payment_provider_id_Delete
}

type CustomerFields_payment_provider_id_Create {
  permission: Boolean!
}

type CustomerFields_payment_provider_id_Read {
  permission: Boolean!
}

type CustomerFields_payment_provider_id_Update {
  permission: Boolean!
}

type CustomerFields_payment_provider_id_Delete {
  permission: Boolean!
}

type CustomerFields_payment_methods {
  create: CustomerFields_payment_methods_Create
  read: CustomerFields_payment_methods_Read
  update: CustomerFields_payment_methods_Update
  delete: CustomerFields_payment_methods_Delete
}

type CustomerFields_payment_methods_Create {
  permission: Boolean!
}

type CustomerFields_payment_methods_Read {
  permission: Boolean!
}

type CustomerFields_payment_methods_Update {
  permission: Boolean!
}

type CustomerFields_payment_methods_Delete {
  permission: Boolean!
}

type CustomerFields_id {
  create: CustomerFields_id_Create
  read: CustomerFields_id_Read
  update: CustomerFields_id_Update
  delete: CustomerFields_id_Delete
}

type CustomerFields_id_Create {
  permission: Boolean!
}

type CustomerFields_id_Read {
  permission: Boolean!
}

type CustomerFields_id_Update {
  permission: Boolean!
}

type CustomerFields_id_Delete {
  permission: Boolean!
}

type CustomerFields_name {
  create: CustomerFields_name_Create
  read: CustomerFields_name_Read
  update: CustomerFields_name_Update
  delete: CustomerFields_name_Delete
}

type CustomerFields_name_Create {
  permission: Boolean!
}

type CustomerFields_name_Read {
  permission: Boolean!
}

type CustomerFields_name_Update {
  permission: Boolean!
}

type CustomerFields_name_Delete {
  permission: Boolean!
}

type CustomerFields_phone {
  create: CustomerFields_phone_Create
  read: CustomerFields_phone_Read
  update: CustomerFields_phone_Update
  delete: CustomerFields_phone_Delete
}

type CustomerFields_phone_Create {
  permission: Boolean!
}

type CustomerFields_phone_Read {
  permission: Boolean!
}

type CustomerFields_phone_Update {
  permission: Boolean!
}

type CustomerFields_phone_Delete {
  permission: Boolean!
}

type CustomerFields_shipping_address {
  create: CustomerFields_shipping_address_Create
  read: CustomerFields_shipping_address_Read
  update: CustomerFields_shipping_address_Update
  delete: CustomerFields_shipping_address_Delete
}

type CustomerFields_shipping_address_Create {
  permission: Boolean!
}

type CustomerFields_shipping_address_Read {
  permission: Boolean!
}

type CustomerFields_shipping_address_Update {
  permission: Boolean!
}

type CustomerFields_shipping_address_Delete {
  permission: Boolean!
}

type CustomerFields_status {
  create: CustomerFields_status_Create
  read: CustomerFields_status_Read
  update: CustomerFields_status_Update
  delete: CustomerFields_status_Delete
}

type CustomerFields_status_Create {
  permission: Boolean!
}

type CustomerFields_status_Read {
  permission: Boolean!
}

type CustomerFields_status_Update {
  permission: Boolean!
}

type CustomerFields_status_Delete {
  permission: Boolean!
}

type CustomerFields_perks {
  create: CustomerFields_perks_Create
  read: CustomerFields_perks_Read
  update: CustomerFields_perks_Update
  delete: CustomerFields_perks_Delete
}

type CustomerFields_perks_Create {
  permission: Boolean!
}

type CustomerFields_perks_Read {
  permission: Boolean!
}

type CustomerFields_perks_Update {
  permission: Boolean!
}

type CustomerFields_perks_Delete {
  permission: Boolean!
}

type CustomerFields_accepts_newsletter {
  create: CustomerFields_accepts_newsletter_Create
  read: CustomerFields_accepts_newsletter_Read
  update: CustomerFields_accepts_newsletter_Update
  delete: CustomerFields_accepts_newsletter_Delete
}

type CustomerFields_accepts_newsletter_Create {
  permission: Boolean!
}

type CustomerFields_accepts_newsletter_Read {
  permission: Boolean!
}

type CustomerFields_accepts_newsletter_Update {
  permission: Boolean!
}

type CustomerFields_accepts_newsletter_Delete {
  permission: Boolean!
}

type CustomerFields_notes {
  create: CustomerFields_notes_Create
  read: CustomerFields_notes_Read
  update: CustomerFields_notes_Update
  delete: CustomerFields_notes_Delete
}

type CustomerFields_notes_Create {
  permission: Boolean!
}

type CustomerFields_notes_Read {
  permission: Boolean!
}

type CustomerFields_notes_Update {
  permission: Boolean!
}

type CustomerFields_notes_Delete {
  permission: Boolean!
}

type CustomerFields_email {
  create: CustomerFields_email_Create
  read: CustomerFields_email_Read
  update: CustomerFields_email_Update
  delete: CustomerFields_email_Delete
}

type CustomerFields_email_Create {
  permission: Boolean!
}

type CustomerFields_email_Read {
  permission: Boolean!
}

type CustomerFields_email_Update {
  permission: Boolean!
}

type CustomerFields_email_Delete {
  permission: Boolean!
}

type CustomerFields_password {
  create: CustomerFields_password_Create
  read: CustomerFields_password_Read
  update: CustomerFields_password_Update
  delete: CustomerFields_password_Delete
}

type CustomerFields_password_Create {
  permission: Boolean!
}

type CustomerFields_password_Read {
  permission: Boolean!
}

type CustomerFields_password_Update {
  permission: Boolean!
}

type CustomerFields_password_Delete {
  permission: Boolean!
}

type CustomerCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type CustomerReadAccess {
  permission: Boolean!
  where: JSONObject
}

type CustomerUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type CustomerDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type CustomerUnlockAccess {
  permission: Boolean!
  where: JSONObject
}

type PerkAccess {
  fields: PerkFields
  create: PerkCreateAccess
  read: PerkReadAccess
  update: PerkUpdateAccess
  delete: PerkDeleteAccess
}

type PerkFields {
  title: PerkFields_title
  id: PerkFields_id
  description: PerkFields_description
  season: PerkFields_season
}

type PerkFields_title {
  create: PerkFields_title_Create
  read: PerkFields_title_Read
  update: PerkFields_title_Update
  delete: PerkFields_title_Delete
}

type PerkFields_title_Create {
  permission: Boolean!
}

type PerkFields_title_Read {
  permission: Boolean!
}

type PerkFields_title_Update {
  permission: Boolean!
}

type PerkFields_title_Delete {
  permission: Boolean!
}

type PerkFields_id {
  create: PerkFields_id_Create
  read: PerkFields_id_Read
  update: PerkFields_id_Update
  delete: PerkFields_id_Delete
}

type PerkFields_id_Create {
  permission: Boolean!
}

type PerkFields_id_Read {
  permission: Boolean!
}

type PerkFields_id_Update {
  permission: Boolean!
}

type PerkFields_id_Delete {
  permission: Boolean!
}

type PerkFields_description {
  create: PerkFields_description_Create
  read: PerkFields_description_Read
  update: PerkFields_description_Update
  delete: PerkFields_description_Delete
}

type PerkFields_description_Create {
  permission: Boolean!
}

type PerkFields_description_Read {
  permission: Boolean!
}

type PerkFields_description_Update {
  permission: Boolean!
}

type PerkFields_description_Delete {
  permission: Boolean!
}

type PerkFields_season {
  create: PerkFields_season_Create
  read: PerkFields_season_Read
  update: PerkFields_season_Update
  delete: PerkFields_season_Delete
}

type PerkFields_season_Create {
  permission: Boolean!
}

type PerkFields_season_Read {
  permission: Boolean!
}

type PerkFields_season_Update {
  permission: Boolean!
}

type PerkFields_season_Delete {
  permission: Boolean!
}

type PerkCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type PerkReadAccess {
  permission: Boolean!
  where: JSONObject
}

type PerkUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type PerkDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type OrderAccess {
  fields: OrderFields
  create: OrderCreateAccess
  read: OrderReadAccess
  update: OrderUpdateAccess
  delete: OrderDeleteAccess
}

type OrderFields {
  id: OrderFields_id
  email: OrderFields_email
  shipping_address: OrderFields_shipping_address
  season: OrderFields_season
  placed_by: OrderFields_placed_by
  line_items: OrderFields_line_items
  subscription: OrderFields_subscription
  checkout: OrderFields_checkout
  notes: OrderFields_notes
  status: OrderFields_status
  total: OrderFields_total
}

type OrderFields_id {
  create: OrderFields_id_Create
  read: OrderFields_id_Read
  update: OrderFields_id_Update
  delete: OrderFields_id_Delete
}

type OrderFields_id_Create {
  permission: Boolean!
}

type OrderFields_id_Read {
  permission: Boolean!
}

type OrderFields_id_Update {
  permission: Boolean!
}

type OrderFields_id_Delete {
  permission: Boolean!
}

type OrderFields_email {
  create: OrderFields_email_Create
  read: OrderFields_email_Read
  update: OrderFields_email_Update
  delete: OrderFields_email_Delete
}

type OrderFields_email_Create {
  permission: Boolean!
}

type OrderFields_email_Read {
  permission: Boolean!
}

type OrderFields_email_Update {
  permission: Boolean!
}

type OrderFields_email_Delete {
  permission: Boolean!
}

type OrderFields_shipping_address {
  create: OrderFields_shipping_address_Create
  read: OrderFields_shipping_address_Read
  update: OrderFields_shipping_address_Update
  delete: OrderFields_shipping_address_Delete
}

type OrderFields_shipping_address_Create {
  permission: Boolean!
}

type OrderFields_shipping_address_Read {
  permission: Boolean!
}

type OrderFields_shipping_address_Update {
  permission: Boolean!
}

type OrderFields_shipping_address_Delete {
  permission: Boolean!
}

type OrderFields_season {
  create: OrderFields_season_Create
  read: OrderFields_season_Read
  update: OrderFields_season_Update
  delete: OrderFields_season_Delete
}

type OrderFields_season_Create {
  permission: Boolean!
}

type OrderFields_season_Read {
  permission: Boolean!
}

type OrderFields_season_Update {
  permission: Boolean!
}

type OrderFields_season_Delete {
  permission: Boolean!
}

type OrderFields_placed_by {
  create: OrderFields_placed_by_Create
  read: OrderFields_placed_by_Read
  update: OrderFields_placed_by_Update
  delete: OrderFields_placed_by_Delete
}

type OrderFields_placed_by_Create {
  permission: Boolean!
}

type OrderFields_placed_by_Read {
  permission: Boolean!
}

type OrderFields_placed_by_Update {
  permission: Boolean!
}

type OrderFields_placed_by_Delete {
  permission: Boolean!
}

type OrderFields_line_items {
  create: OrderFields_line_items_Create
  read: OrderFields_line_items_Read
  update: OrderFields_line_items_Update
  delete: OrderFields_line_items_Delete
  fields: OrderFields_line_items_Fields
}

type OrderFields_line_items_Create {
  permission: Boolean!
}

type OrderFields_line_items_Read {
  permission: Boolean!
}

type OrderFields_line_items_Update {
  permission: Boolean!
}

type OrderFields_line_items_Delete {
  permission: Boolean!
}

type OrderFields_line_items_Fields {
  description: OrderFields_line_items_description
  quantity: OrderFields_line_items_quantity
  size: OrderFields_line_items_size
  product: OrderFields_line_items_product
  status: OrderFields_line_items_status
  id: OrderFields_line_items_id
}

type OrderFields_line_items_description {
  create: OrderFields_line_items_description_Create
  read: OrderFields_line_items_description_Read
  update: OrderFields_line_items_description_Update
  delete: OrderFields_line_items_description_Delete
}

type OrderFields_line_items_description_Create {
  permission: Boolean!
}

type OrderFields_line_items_description_Read {
  permission: Boolean!
}

type OrderFields_line_items_description_Update {
  permission: Boolean!
}

type OrderFields_line_items_description_Delete {
  permission: Boolean!
}

type OrderFields_line_items_quantity {
  create: OrderFields_line_items_quantity_Create
  read: OrderFields_line_items_quantity_Read
  update: OrderFields_line_items_quantity_Update
  delete: OrderFields_line_items_quantity_Delete
}

type OrderFields_line_items_quantity_Create {
  permission: Boolean!
}

type OrderFields_line_items_quantity_Read {
  permission: Boolean!
}

type OrderFields_line_items_quantity_Update {
  permission: Boolean!
}

type OrderFields_line_items_quantity_Delete {
  permission: Boolean!
}

type OrderFields_line_items_size {
  create: OrderFields_line_items_size_Create
  read: OrderFields_line_items_size_Read
  update: OrderFields_line_items_size_Update
  delete: OrderFields_line_items_size_Delete
}

type OrderFields_line_items_size_Create {
  permission: Boolean!
}

type OrderFields_line_items_size_Read {
  permission: Boolean!
}

type OrderFields_line_items_size_Update {
  permission: Boolean!
}

type OrderFields_line_items_size_Delete {
  permission: Boolean!
}

type OrderFields_line_items_product {
  create: OrderFields_line_items_product_Create
  read: OrderFields_line_items_product_Read
  update: OrderFields_line_items_product_Update
  delete: OrderFields_line_items_product_Delete
}

type OrderFields_line_items_product_Create {
  permission: Boolean!
}

type OrderFields_line_items_product_Read {
  permission: Boolean!
}

type OrderFields_line_items_product_Update {
  permission: Boolean!
}

type OrderFields_line_items_product_Delete {
  permission: Boolean!
}

type OrderFields_line_items_status {
  create: OrderFields_line_items_status_Create
  read: OrderFields_line_items_status_Read
  update: OrderFields_line_items_status_Update
  delete: OrderFields_line_items_status_Delete
}

type OrderFields_line_items_status_Create {
  permission: Boolean!
}

type OrderFields_line_items_status_Read {
  permission: Boolean!
}

type OrderFields_line_items_status_Update {
  permission: Boolean!
}

type OrderFields_line_items_status_Delete {
  permission: Boolean!
}

type OrderFields_line_items_id {
  create: OrderFields_line_items_id_Create
  read: OrderFields_line_items_id_Read
  update: OrderFields_line_items_id_Update
  delete: OrderFields_line_items_id_Delete
}

type OrderFields_line_items_id_Create {
  permission: Boolean!
}

type OrderFields_line_items_id_Read {
  permission: Boolean!
}

type OrderFields_line_items_id_Update {
  permission: Boolean!
}

type OrderFields_line_items_id_Delete {
  permission: Boolean!
}

type OrderFields_subscription {
  create: OrderFields_subscription_Create
  read: OrderFields_subscription_Read
  update: OrderFields_subscription_Update
  delete: OrderFields_subscription_Delete
}

type OrderFields_subscription_Create {
  permission: Boolean!
}

type OrderFields_subscription_Read {
  permission: Boolean!
}

type OrderFields_subscription_Update {
  permission: Boolean!
}

type OrderFields_subscription_Delete {
  permission: Boolean!
}

type OrderFields_checkout {
  create: OrderFields_checkout_Create
  read: OrderFields_checkout_Read
  update: OrderFields_checkout_Update
  delete: OrderFields_checkout_Delete
}

type OrderFields_checkout_Create {
  permission: Boolean!
}

type OrderFields_checkout_Read {
  permission: Boolean!
}

type OrderFields_checkout_Update {
  permission: Boolean!
}

type OrderFields_checkout_Delete {
  permission: Boolean!
}

type OrderFields_notes {
  create: OrderFields_notes_Create
  read: OrderFields_notes_Read
  update: OrderFields_notes_Update
  delete: OrderFields_notes_Delete
}

type OrderFields_notes_Create {
  permission: Boolean!
}

type OrderFields_notes_Read {
  permission: Boolean!
}

type OrderFields_notes_Update {
  permission: Boolean!
}

type OrderFields_notes_Delete {
  permission: Boolean!
}

type OrderFields_status {
  create: OrderFields_status_Create
  read: OrderFields_status_Read
  update: OrderFields_status_Update
  delete: OrderFields_status_Delete
}

type OrderFields_status_Create {
  permission: Boolean!
}

type OrderFields_status_Read {
  permission: Boolean!
}

type OrderFields_status_Update {
  permission: Boolean!
}

type OrderFields_status_Delete {
  permission: Boolean!
}

type OrderFields_total {
  create: OrderFields_total_Create
  read: OrderFields_total_Read
  update: OrderFields_total_Update
  delete: OrderFields_total_Delete
}

type OrderFields_total_Create {
  permission: Boolean!
}

type OrderFields_total_Read {
  permission: Boolean!
}

type OrderFields_total_Update {
  permission: Boolean!
}

type OrderFields_total_Delete {
  permission: Boolean!
}

type OrderCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type OrderReadAccess {
  permission: Boolean!
  where: JSONObject
}

type OrderUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type OrderDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type SubscriptionAccess {
  fields: SubscriptionFields
  create: SubscriptionCreateAccess
  read: SubscriptionReadAccess
  update: SubscriptionUpdateAccess
  delete: SubscriptionDeleteAccess
}

type SubscriptionFields {
  id: SubscriptionFields_id
  placed_by: SubscriptionFields_placed_by
  schedule: SubscriptionFields_schedule
  season: SubscriptionFields_season
  notes: SubscriptionFields_notes
  status: SubscriptionFields_status
  total: SubscriptionFields_total
}

type SubscriptionFields_id {
  create: SubscriptionFields_id_Create
  read: SubscriptionFields_id_Read
  update: SubscriptionFields_id_Update
  delete: SubscriptionFields_id_Delete
}

type SubscriptionFields_id_Create {
  permission: Boolean!
}

type SubscriptionFields_id_Read {
  permission: Boolean!
}

type SubscriptionFields_id_Update {
  permission: Boolean!
}

type SubscriptionFields_id_Delete {
  permission: Boolean!
}

type SubscriptionFields_placed_by {
  create: SubscriptionFields_placed_by_Create
  read: SubscriptionFields_placed_by_Read
  update: SubscriptionFields_placed_by_Update
  delete: SubscriptionFields_placed_by_Delete
}

type SubscriptionFields_placed_by_Create {
  permission: Boolean!
}

type SubscriptionFields_placed_by_Read {
  permission: Boolean!
}

type SubscriptionFields_placed_by_Update {
  permission: Boolean!
}

type SubscriptionFields_placed_by_Delete {
  permission: Boolean!
}

type SubscriptionFields_schedule {
  create: SubscriptionFields_schedule_Create
  read: SubscriptionFields_schedule_Read
  update: SubscriptionFields_schedule_Update
  delete: SubscriptionFields_schedule_Delete
  fields: SubscriptionFields_schedule_Fields
}

type SubscriptionFields_schedule_Create {
  permission: Boolean!
}

type SubscriptionFields_schedule_Read {
  permission: Boolean!
}

type SubscriptionFields_schedule_Update {
  permission: Boolean!
}

type SubscriptionFields_schedule_Delete {
  permission: Boolean!
}

type SubscriptionFields_schedule_Fields {
  start_date: SubscriptionFields_schedule_start_date
  end_date: SubscriptionFields_schedule_end_date
  interval: SubscriptionFields_schedule_interval
}

type SubscriptionFields_schedule_start_date {
  create: SubscriptionFields_schedule_start_date_Create
  read: SubscriptionFields_schedule_start_date_Read
  update: SubscriptionFields_schedule_start_date_Update
  delete: SubscriptionFields_schedule_start_date_Delete
}

type SubscriptionFields_schedule_start_date_Create {
  permission: Boolean!
}

type SubscriptionFields_schedule_start_date_Read {
  permission: Boolean!
}

type SubscriptionFields_schedule_start_date_Update {
  permission: Boolean!
}

type SubscriptionFields_schedule_start_date_Delete {
  permission: Boolean!
}

type SubscriptionFields_schedule_end_date {
  create: SubscriptionFields_schedule_end_date_Create
  read: SubscriptionFields_schedule_end_date_Read
  update: SubscriptionFields_schedule_end_date_Update
  delete: SubscriptionFields_schedule_end_date_Delete
}

type SubscriptionFields_schedule_end_date_Create {
  permission: Boolean!
}

type SubscriptionFields_schedule_end_date_Read {
  permission: Boolean!
}

type SubscriptionFields_schedule_end_date_Update {
  permission: Boolean!
}

type SubscriptionFields_schedule_end_date_Delete {
  permission: Boolean!
}

type SubscriptionFields_schedule_interval {
  create: SubscriptionFields_schedule_interval_Create
  read: SubscriptionFields_schedule_interval_Read
  update: SubscriptionFields_schedule_interval_Update
  delete: SubscriptionFields_schedule_interval_Delete
}

type SubscriptionFields_schedule_interval_Create {
  permission: Boolean!
}

type SubscriptionFields_schedule_interval_Read {
  permission: Boolean!
}

type SubscriptionFields_schedule_interval_Update {
  permission: Boolean!
}

type SubscriptionFields_schedule_interval_Delete {
  permission: Boolean!
}

type SubscriptionFields_season {
  create: SubscriptionFields_season_Create
  read: SubscriptionFields_season_Read
  update: SubscriptionFields_season_Update
  delete: SubscriptionFields_season_Delete
}

type SubscriptionFields_season_Create {
  permission: Boolean!
}

type SubscriptionFields_season_Read {
  permission: Boolean!
}

type SubscriptionFields_season_Update {
  permission: Boolean!
}

type SubscriptionFields_season_Delete {
  permission: Boolean!
}

type SubscriptionFields_notes {
  create: SubscriptionFields_notes_Create
  read: SubscriptionFields_notes_Read
  update: SubscriptionFields_notes_Update
  delete: SubscriptionFields_notes_Delete
}

type SubscriptionFields_notes_Create {
  permission: Boolean!
}

type SubscriptionFields_notes_Read {
  permission: Boolean!
}

type SubscriptionFields_notes_Update {
  permission: Boolean!
}

type SubscriptionFields_notes_Delete {
  permission: Boolean!
}

type SubscriptionFields_status {
  create: SubscriptionFields_status_Create
  read: SubscriptionFields_status_Read
  update: SubscriptionFields_status_Update
  delete: SubscriptionFields_status_Delete
}

type SubscriptionFields_status_Create {
  permission: Boolean!
}

type SubscriptionFields_status_Read {
  permission: Boolean!
}

type SubscriptionFields_status_Update {
  permission: Boolean!
}

type SubscriptionFields_status_Delete {
  permission: Boolean!
}

type SubscriptionFields_total {
  create: SubscriptionFields_total_Create
  read: SubscriptionFields_total_Read
  update: SubscriptionFields_total_Update
  delete: SubscriptionFields_total_Delete
}

type SubscriptionFields_total_Create {
  permission: Boolean!
}

type SubscriptionFields_total_Read {
  permission: Boolean!
}

type SubscriptionFields_total_Update {
  permission: Boolean!
}

type SubscriptionFields_total_Delete {
  permission: Boolean!
}

type SubscriptionCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type SubscriptionReadAccess {
  permission: Boolean!
  where: JSONObject
}

type SubscriptionUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type SubscriptionDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type ContentpageAccess {
  fields: ContentpageFields
  create: ContentpageCreateAccess
  read: ContentpageReadAccess
  update: ContentpageUpdateAccess
  delete: ContentpageDeleteAccess
}

type ContentpageFields {
  title: ContentpageFields_title
  id: ContentpageFields_id
  author: ContentpageFields_author
  publishedDate: ContentpageFields_publishedDate
  index: ContentpageFields_index
  seasons: ContentpageFields_seasons
  content: ContentpageFields_content
  status: ContentpageFields_status
}

type ContentpageFields_title {
  create: ContentpageFields_title_Create
  read: ContentpageFields_title_Read
  update: ContentpageFields_title_Update
  delete: ContentpageFields_title_Delete
}

type ContentpageFields_title_Create {
  permission: Boolean!
}

type ContentpageFields_title_Read {
  permission: Boolean!
}

type ContentpageFields_title_Update {
  permission: Boolean!
}

type ContentpageFields_title_Delete {
  permission: Boolean!
}

type ContentpageFields_id {
  create: ContentpageFields_id_Create
  read: ContentpageFields_id_Read
  update: ContentpageFields_id_Update
  delete: ContentpageFields_id_Delete
}

type ContentpageFields_id_Create {
  permission: Boolean!
}

type ContentpageFields_id_Read {
  permission: Boolean!
}

type ContentpageFields_id_Update {
  permission: Boolean!
}

type ContentpageFields_id_Delete {
  permission: Boolean!
}

type ContentpageFields_author {
  create: ContentpageFields_author_Create
  read: ContentpageFields_author_Read
  update: ContentpageFields_author_Update
  delete: ContentpageFields_author_Delete
}

type ContentpageFields_author_Create {
  permission: Boolean!
}

type ContentpageFields_author_Read {
  permission: Boolean!
}

type ContentpageFields_author_Update {
  permission: Boolean!
}

type ContentpageFields_author_Delete {
  permission: Boolean!
}

type ContentpageFields_publishedDate {
  create: ContentpageFields_publishedDate_Create
  read: ContentpageFields_publishedDate_Read
  update: ContentpageFields_publishedDate_Update
  delete: ContentpageFields_publishedDate_Delete
}

type ContentpageFields_publishedDate_Create {
  permission: Boolean!
}

type ContentpageFields_publishedDate_Read {
  permission: Boolean!
}

type ContentpageFields_publishedDate_Update {
  permission: Boolean!
}

type ContentpageFields_publishedDate_Delete {
  permission: Boolean!
}

type ContentpageFields_index {
  create: ContentpageFields_index_Create
  read: ContentpageFields_index_Read
  update: ContentpageFields_index_Update
  delete: ContentpageFields_index_Delete
}

type ContentpageFields_index_Create {
  permission: Boolean!
}

type ContentpageFields_index_Read {
  permission: Boolean!
}

type ContentpageFields_index_Update {
  permission: Boolean!
}

type ContentpageFields_index_Delete {
  permission: Boolean!
}

type ContentpageFields_seasons {
  create: ContentpageFields_seasons_Create
  read: ContentpageFields_seasons_Read
  update: ContentpageFields_seasons_Update
  delete: ContentpageFields_seasons_Delete
}

type ContentpageFields_seasons_Create {
  permission: Boolean!
}

type ContentpageFields_seasons_Read {
  permission: Boolean!
}

type ContentpageFields_seasons_Update {
  permission: Boolean!
}

type ContentpageFields_seasons_Delete {
  permission: Boolean!
}

type ContentpageFields_content {
  create: ContentpageFields_content_Create
  read: ContentpageFields_content_Read
  update: ContentpageFields_content_Update
  delete: ContentpageFields_content_Delete
}

type ContentpageFields_content_Create {
  permission: Boolean!
}

type ContentpageFields_content_Read {
  permission: Boolean!
}

type ContentpageFields_content_Update {
  permission: Boolean!
}

type ContentpageFields_content_Delete {
  permission: Boolean!
}

type ContentpageFields_status {
  create: ContentpageFields_status_Create
  read: ContentpageFields_status_Read
  update: ContentpageFields_status_Update
  delete: ContentpageFields_status_Delete
}

type ContentpageFields_status_Create {
  permission: Boolean!
}

type ContentpageFields_status_Read {
  permission: Boolean!
}

type ContentpageFields_status_Update {
  permission: Boolean!
}

type ContentpageFields_status_Delete {
  permission: Boolean!
}

type ContentpageCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type ContentpageReadAccess {
  permission: Boolean!
  where: JSONObject
}

type ContentpageUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type ContentpageDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type HistorytaskAccess {
  fields: HistorytaskFields
  create: HistorytaskCreateAccess
  read: HistorytaskReadAccess
  update: HistorytaskUpdateAccess
  delete: HistorytaskDeleteAccess
}

type HistorytaskFields {
  description: HistorytaskFields_description
  task: HistorytaskFields_task
  count: HistorytaskFields_count
  product: HistorytaskFields_product
  date: HistorytaskFields_date
  season: HistorytaskFields_season
  notes: HistorytaskFields_notes
}

type HistorytaskFields_description {
  create: HistorytaskFields_description_Create
  read: HistorytaskFields_description_Read
  update: HistorytaskFields_description_Update
  delete: HistorytaskFields_description_Delete
}

type HistorytaskFields_description_Create {
  permission: Boolean!
}

type HistorytaskFields_description_Read {
  permission: Boolean!
}

type HistorytaskFields_description_Update {
  permission: Boolean!
}

type HistorytaskFields_description_Delete {
  permission: Boolean!
}

type HistorytaskFields_task {
  create: HistorytaskFields_task_Create
  read: HistorytaskFields_task_Read
  update: HistorytaskFields_task_Update
  delete: HistorytaskFields_task_Delete
}

type HistorytaskFields_task_Create {
  permission: Boolean!
}

type HistorytaskFields_task_Read {
  permission: Boolean!
}

type HistorytaskFields_task_Update {
  permission: Boolean!
}

type HistorytaskFields_task_Delete {
  permission: Boolean!
}

type HistorytaskFields_count {
  create: HistorytaskFields_count_Create
  read: HistorytaskFields_count_Read
  update: HistorytaskFields_count_Update
  delete: HistorytaskFields_count_Delete
}

type HistorytaskFields_count_Create {
  permission: Boolean!
}

type HistorytaskFields_count_Read {
  permission: Boolean!
}

type HistorytaskFields_count_Update {
  permission: Boolean!
}

type HistorytaskFields_count_Delete {
  permission: Boolean!
}

type HistorytaskFields_product {
  create: HistorytaskFields_product_Create
  read: HistorytaskFields_product_Read
  update: HistorytaskFields_product_Update
  delete: HistorytaskFields_product_Delete
}

type HistorytaskFields_product_Create {
  permission: Boolean!
}

type HistorytaskFields_product_Read {
  permission: Boolean!
}

type HistorytaskFields_product_Update {
  permission: Boolean!
}

type HistorytaskFields_product_Delete {
  permission: Boolean!
}

type HistorytaskFields_date {
  create: HistorytaskFields_date_Create
  read: HistorytaskFields_date_Read
  update: HistorytaskFields_date_Update
  delete: HistorytaskFields_date_Delete
}

type HistorytaskFields_date_Create {
  permission: Boolean!
}

type HistorytaskFields_date_Read {
  permission: Boolean!
}

type HistorytaskFields_date_Update {
  permission: Boolean!
}

type HistorytaskFields_date_Delete {
  permission: Boolean!
}

type HistorytaskFields_season {
  create: HistorytaskFields_season_Create
  read: HistorytaskFields_season_Read
  update: HistorytaskFields_season_Update
  delete: HistorytaskFields_season_Delete
}

type HistorytaskFields_season_Create {
  permission: Boolean!
}

type HistorytaskFields_season_Read {
  permission: Boolean!
}

type HistorytaskFields_season_Update {
  permission: Boolean!
}

type HistorytaskFields_season_Delete {
  permission: Boolean!
}

type HistorytaskFields_notes {
  create: HistorytaskFields_notes_Create
  read: HistorytaskFields_notes_Read
  update: HistorytaskFields_notes_Update
  delete: HistorytaskFields_notes_Delete
}

type HistorytaskFields_notes_Create {
  permission: Boolean!
}

type HistorytaskFields_notes_Read {
  permission: Boolean!
}

type HistorytaskFields_notes_Update {
  permission: Boolean!
}

type HistorytaskFields_notes_Delete {
  permission: Boolean!
}

type HistorytaskCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type HistorytaskReadAccess {
  permission: Boolean!
  where: JSONObject
}

type HistorytaskUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type HistorytaskDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type ProducerAccess {
  fields: ProducerFields
  create: ProducerCreateAccess
  read: ProducerReadAccess
  update: ProducerUpdateAccess
  delete: ProducerDeleteAccess
  unlock: ProducerUnlockAccess
}

type ProducerFields {
  name: ProducerFields_name
  phone: ProducerFields_phone
  shipping_address: ProducerFields_shipping_address
  enableAPIKey: ProducerFields_enableAPIKey
  apiKey: ProducerFields_apiKey
  email: ProducerFields_email
  password: ProducerFields_password
}

type ProducerFields_name {
  create: ProducerFields_name_Create
  read: ProducerFields_name_Read
  update: ProducerFields_name_Update
  delete: ProducerFields_name_Delete
}

type ProducerFields_name_Create {
  permission: Boolean!
}

type ProducerFields_name_Read {
  permission: Boolean!
}

type ProducerFields_name_Update {
  permission: Boolean!
}

type ProducerFields_name_Delete {
  permission: Boolean!
}

type ProducerFields_phone {
  create: ProducerFields_phone_Create
  read: ProducerFields_phone_Read
  update: ProducerFields_phone_Update
  delete: ProducerFields_phone_Delete
}

type ProducerFields_phone_Create {
  permission: Boolean!
}

type ProducerFields_phone_Read {
  permission: Boolean!
}

type ProducerFields_phone_Update {
  permission: Boolean!
}

type ProducerFields_phone_Delete {
  permission: Boolean!
}

type ProducerFields_shipping_address {
  create: ProducerFields_shipping_address_Create
  read: ProducerFields_shipping_address_Read
  update: ProducerFields_shipping_address_Update
  delete: ProducerFields_shipping_address_Delete
}

type ProducerFields_shipping_address_Create {
  permission: Boolean!
}

type ProducerFields_shipping_address_Read {
  permission: Boolean!
}

type ProducerFields_shipping_address_Update {
  permission: Boolean!
}

type ProducerFields_shipping_address_Delete {
  permission: Boolean!
}

type ProducerFields_enableAPIKey {
  create: ProducerFields_enableAPIKey_Create
  read: ProducerFields_enableAPIKey_Read
  update: ProducerFields_enableAPIKey_Update
  delete: ProducerFields_enableAPIKey_Delete
}

type ProducerFields_enableAPIKey_Create {
  permission: Boolean!
}

type ProducerFields_enableAPIKey_Read {
  permission: Boolean!
}

type ProducerFields_enableAPIKey_Update {
  permission: Boolean!
}

type ProducerFields_enableAPIKey_Delete {
  permission: Boolean!
}

type ProducerFields_apiKey {
  create: ProducerFields_apiKey_Create
  read: ProducerFields_apiKey_Read
  update: ProducerFields_apiKey_Update
  delete: ProducerFields_apiKey_Delete
}

type ProducerFields_apiKey_Create {
  permission: Boolean!
}

type ProducerFields_apiKey_Read {
  permission: Boolean!
}

type ProducerFields_apiKey_Update {
  permission: Boolean!
}

type ProducerFields_apiKey_Delete {
  permission: Boolean!
}

type ProducerFields_email {
  create: ProducerFields_email_Create
  read: ProducerFields_email_Read
  update: ProducerFields_email_Update
  delete: ProducerFields_email_Delete
}

type ProducerFields_email_Create {
  permission: Boolean!
}

type ProducerFields_email_Read {
  permission: Boolean!
}

type ProducerFields_email_Update {
  permission: Boolean!
}

type ProducerFields_email_Delete {
  permission: Boolean!
}

type ProducerFields_password {
  create: ProducerFields_password_Create
  read: ProducerFields_password_Read
  update: ProducerFields_password_Update
  delete: ProducerFields_password_Delete
}

type ProducerFields_password_Create {
  permission: Boolean!
}

type ProducerFields_password_Read {
  permission: Boolean!
}

type ProducerFields_password_Update {
  permission: Boolean!
}

type ProducerFields_password_Delete {
  permission: Boolean!
}

type ProducerCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type ProducerReadAccess {
  permission: Boolean!
  where: JSONObject
}

type ProducerUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type ProducerDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type ProducerUnlockAccess {
  permission: Boolean!
  where: JSONObject
}

type UploadAccess {
  fields: UploadFields
  create: UploadCreateAccess
  read: UploadReadAccess
  update: UploadUpdateAccess
  delete: UploadDeleteAccess
}

type UploadFields {
  title: UploadFields_title
  caption: UploadFields_caption
  url: UploadFields_url
  filename: UploadFields_filename
  mimeType: UploadFields_mimeType
  filesize: UploadFields_filesize
}

type UploadFields_title {
  create: UploadFields_title_Create
  read: UploadFields_title_Read
  update: UploadFields_title_Update
  delete: UploadFields_title_Delete
}

type UploadFields_title_Create {
  permission: Boolean!
}

type UploadFields_title_Read {
  permission: Boolean!
}

type UploadFields_title_Update {
  permission: Boolean!
}

type UploadFields_title_Delete {
  permission: Boolean!
}

type UploadFields_caption {
  create: UploadFields_caption_Create
  read: UploadFields_caption_Read
  update: UploadFields_caption_Update
  delete: UploadFields_caption_Delete
}

type UploadFields_caption_Create {
  permission: Boolean!
}

type UploadFields_caption_Read {
  permission: Boolean!
}

type UploadFields_caption_Update {
  permission: Boolean!
}

type UploadFields_caption_Delete {
  permission: Boolean!
}

type UploadFields_url {
  create: UploadFields_url_Create
  read: UploadFields_url_Read
  update: UploadFields_url_Update
  delete: UploadFields_url_Delete
}

type UploadFields_url_Create {
  permission: Boolean!
}

type UploadFields_url_Read {
  permission: Boolean!
}

type UploadFields_url_Update {
  permission: Boolean!
}

type UploadFields_url_Delete {
  permission: Boolean!
}

type UploadFields_filename {
  create: UploadFields_filename_Create
  read: UploadFields_filename_Read
  update: UploadFields_filename_Update
  delete: UploadFields_filename_Delete
}

type UploadFields_filename_Create {
  permission: Boolean!
}

type UploadFields_filename_Read {
  permission: Boolean!
}

type UploadFields_filename_Update {
  permission: Boolean!
}

type UploadFields_filename_Delete {
  permission: Boolean!
}

type UploadFields_mimeType {
  create: UploadFields_mimeType_Create
  read: UploadFields_mimeType_Read
  update: UploadFields_mimeType_Update
  delete: UploadFields_mimeType_Delete
}

type UploadFields_mimeType_Create {
  permission: Boolean!
}

type UploadFields_mimeType_Read {
  permission: Boolean!
}

type UploadFields_mimeType_Update {
  permission: Boolean!
}

type UploadFields_mimeType_Delete {
  permission: Boolean!
}

type UploadFields_filesize {
  create: UploadFields_filesize_Create
  read: UploadFields_filesize_Read
  update: UploadFields_filesize_Update
  delete: UploadFields_filesize_Delete
}

type UploadFields_filesize_Create {
  permission: Boolean!
}

type UploadFields_filesize_Read {
  permission: Boolean!
}

type UploadFields_filesize_Update {
  permission: Boolean!
}

type UploadFields_filesize_Delete {
  permission: Boolean!
}

type UploadCreateAccess {
  permission: Boolean!
  where: JSONObject
}

type UploadReadAccess {
  permission: Boolean!
  where: JSONObject
}

type UploadUpdateAccess {
  permission: Boolean!
  where: JSONObject
}

type UploadDeleteAccess {
  permission: Boolean!
  where: JSONObject
}

type Mutation {
  createSeason(data: mutationSeasonInput!, draft: Boolean, locale: LocaleInputType): Season
  updateSeason(id: String!, data: mutationSeasonUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Season
  deleteSeason(id: String!): Season
  createProduct(data: mutationProductInput!, draft: Boolean, locale: LocaleInputType): Product
  updateProduct(id: String!, data: mutationProductUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Product
  deleteProduct(id: String!): Product
  createCustomer(data: mutationCustomerInput!, draft: Boolean, locale: LocaleInputType): Customer
  updateCustomer(id: String!, data: mutationCustomerUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Customer
  deleteCustomer(id: String!): Customer
  refreshTokenCustomer(token: String): customersRefreshedCustomer
  logoutCustomer: String
  unlockCustomer(email: String!): Boolean!
  loginCustomer(email: String, password: String): customersLoginResult
  forgotPasswordCustomer(email: String!, disableEmail: Boolean, expiration: Int): Boolean!
  resetPasswordCustomer(token: String, password: String): customersResetPassword
  verifyEmailCustomer(token: String): Boolean
  createPerk(data: mutationPerkInput!, draft: Boolean, locale: LocaleInputType): Perk
  updatePerk(id: String!, data: mutationPerkUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Perk
  deletePerk(id: String!): Perk
  createOrder(data: mutationOrderInput!, draft: Boolean, locale: LocaleInputType): Order
  updateOrder(id: String!, data: mutationOrderUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Order
  deleteOrder(id: String!): Order
  createSubscription(data: mutationSubscriptionInput!, draft: Boolean, locale: LocaleInputType): Subscription
  updateSubscription(id: String!, data: mutationSubscriptionUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Subscription
  deleteSubscription(id: String!): Subscription
  createContentpage(data: mutationContentpageInput!, draft: Boolean, locale: LocaleInputType): Contentpage
  updateContentpage(id: String!, data: mutationContentpageUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Contentpage
  deleteContentpage(id: String!): Contentpage
  createHistorytask(data: mutationHistorytaskInput!, draft: Boolean, locale: LocaleInputType): Historytask
  updateHistorytask(id: String!, data: mutationHistorytaskUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Historytask
  deleteHistorytask(id: String!): Historytask
  createProducer(data: mutationProducerInput!, draft: Boolean, locale: LocaleInputType): Producer
  updateProducer(id: String!, data: mutationProducerUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Producer
  deleteProducer(id: String!): Producer
  refreshTokenProducer(token: String): producersRefreshedProducer
  logoutProducer: String
  unlockProducer(email: String!): Boolean!
  loginProducer(email: String, password: String): producersLoginResult
  forgotPasswordProducer(email: String!, disableEmail: Boolean, expiration: Int): Boolean!
  resetPasswordProducer(token: String, password: String): producersResetPassword
  verifyEmailProducer(token: String): Boolean
  createUpload(data: mutationUploadInput!, draft: Boolean, locale: LocaleInputType): Upload
  updateUpload(id: String!, data: mutationUploadUpdateInput!, draft: Boolean, autosave: Boolean, locale: LocaleInputType): Upload
  deleteUpload(id: String!): Upload
  updatePreference(key: String!, value: JSON): Preference
  deletePreference(key: String!): Preference
}

input mutationSeasonInput {
  name: String
  id: String
  start_date: String!
  end_date: String!
}

input mutationSeasonUpdateInput {
  name: String
  start_date: String
  end_date: String
}

input mutationProductInput {
  title: String
  id: String
  publishedDate: String
  price: Float!
  inventory: Float
  unit: String
  sizes: [mutationProduct_SizesInput]
  seasons: [String]
  thumbnail: String
  description: JSON
  status: Product_status_MutationInput
}

input mutationProduct_SizesInput {
  title: String
  size: Float
  adjustment: Float
  id: String
}

enum Product_status_MutationInput {
  draft
  published
  archived
}

input mutationProductUpdateInput {
  title: String
  publishedDate: String
  price: Float
  inventory: Float
  unit: String
  sizes: [mutationProductUpdate_SizesInput]
  seasons: [String]
  thumbnail: String
  description: JSON
  status: ProductUpdate_status_MutationInput
}

input mutationProductUpdate_SizesInput {
  title: String
  size: Float
  adjustment: Float
  id: String
}

enum ProductUpdate_status_MutationInput {
  draft
  published
  archived
}

input mutationCustomerInput {
  payment_provider_id: String
  payment_methods: String
  id: String
  name: String
  phone: String
  shipping_address: String
  status: Customer_status_MutationInput
  perks: [String]
  accepts_newsletter: Boolean
  notes: JSON
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  loginAttempts: Float
  lockUntil: String
  password: String!
}

enum Customer_status_MutationInput {
  active
  archived
}

input mutationCustomerUpdateInput {
  payment_provider_id: String
  payment_methods: String
  name: String
  phone: String
  shipping_address: String
  status: CustomerUpdate_status_MutationInput
  perks: [String]
  accepts_newsletter: Boolean
  notes: JSON
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  loginAttempts: Float
  lockUntil: String
  password: String
}

enum CustomerUpdate_status_MutationInput {
  active
  archived
}

type customersRefreshedCustomer {
  user: customersJWT
  refreshedToken: String
  exp: Int
}

type customersJWT {
  payment_provider_id: String
  name: String
  email: EmailAddress!
  collection: String!
}

type customersLoginResult {
  token: String
  user: Customer
  exp: Int
}

type customersResetPassword {
  token: String
  user: Customer
}

input mutationPerkInput {
  title: String
  id: String
  description: String
  season: String
}

input mutationPerkUpdateInput {
  title: String
  description: String
  season: String
}

input mutationOrderInput {
  id: String
  email: String
  shipping_address: String
  season: String
  placed_by: Order_Placed_byRelationshipInput
  line_items: [mutationOrder_Line_itemsInput]
  subscription: String
  notes: JSON
  status: Order_status_MutationInput
  total: Float
}

input Order_Placed_byRelationshipInput {
  relationTo: Order_Placed_byRelationshipInputRelationTo
  value: JSON
}

enum Order_Placed_byRelationshipInputRelationTo {
  customers
  producers
}

input mutationOrder_Line_itemsInput {
  description: String
  quantity: Float
  size: Float
  product: String
  status: Order_Line_items_status_MutationInput
  id: String
}

enum Order_Line_items_status_MutationInput {
  processing
  cancelled
  fulfilled
}

enum Order_status_MutationInput {
  processing
  cancelled
  fulfilled
}

input mutationOrderUpdateInput {
  email: String
  shipping_address: String
  season: String
  placed_by: OrderUpdate_Placed_byRelationshipInput
  line_items: [mutationOrderUpdate_Line_itemsInput]
  subscription: String
  notes: JSON
  status: OrderUpdate_status_MutationInput
  total: Float
}

input OrderUpdate_Placed_byRelationshipInput {
  relationTo: OrderUpdate_Placed_byRelationshipInputRelationTo
  value: JSON
}

enum OrderUpdate_Placed_byRelationshipInputRelationTo {
  customers
  producers
}

input mutationOrderUpdate_Line_itemsInput {
  description: String
  quantity: Float
  size: Float
  product: String
  status: OrderUpdate_Line_items_status_MutationInput
  id: String
}

enum OrderUpdate_Line_items_status_MutationInput {
  processing
  cancelled
  fulfilled
}

enum OrderUpdate_status_MutationInput {
  processing
  cancelled
  fulfilled
}

input mutationSubscriptionInput {
  id: String
  placed_by: Subscription_Placed_byRelationshipInput
  schedule: mutationSubscription_ScheduleInput
  season: String
  notes: JSON
  status: Subscription_status_MutationInput
  total: Float
}

input Subscription_Placed_byRelationshipInput {
  relationTo: Subscription_Placed_byRelationshipInputRelationTo
  value: JSON
}

enum Subscription_Placed_byRelationshipInputRelationTo {
  customers
  producers
}

input mutationSubscription_ScheduleInput {
  start_date: String!
  end_date: String
  interval: String
}

enum Subscription_status_MutationInput {
  active
  cancelled
}

input mutationSubscriptionUpdateInput {
  placed_by: SubscriptionUpdate_Placed_byRelationshipInput
  schedule: mutationSubscriptionUpdate_ScheduleInput
  season: String
  notes: JSON
  status: SubscriptionUpdate_status_MutationInput
  total: Float
}

input SubscriptionUpdate_Placed_byRelationshipInput {
  relationTo: SubscriptionUpdate_Placed_byRelationshipInputRelationTo
  value: JSON
}

enum SubscriptionUpdate_Placed_byRelationshipInputRelationTo {
  customers
  producers
}

input mutationSubscriptionUpdate_ScheduleInput {
  start_date: String!
  end_date: String
  interval: String
}

enum SubscriptionUpdate_status_MutationInput {
  active
  cancelled
}

input mutationContentpageInput {
  title: String
  id: String
  author: String
  publishedDate: String
  index: Boolean
  seasons: [String]
  content: JSON
  status: Contentpage_status_MutationInput
}

enum Contentpage_status_MutationInput {
  draft
  published
  archived
}

input mutationContentpageUpdateInput {
  title: String
  author: String
  publishedDate: String
  index: Boolean
  seasons: [String]
  content: JSON
  status: ContentpageUpdate_status_MutationInput
}

enum ContentpageUpdate_status_MutationInput {
  draft
  published
  archived
}

input mutationHistorytaskInput {
  description: String
  task: String!
  count: Float
  product: String
  date: String!
  season: String
  notes: JSON
}

input mutationHistorytaskUpdateInput {
  description: String
  task: String
  count: Float
  product: String
  date: String
  season: String
  notes: JSON
}

input mutationProducerInput {
  name: String
  phone: String
  shipping_address: String
  enableAPIKey: Boolean
  apiKey: String
  apiKeyIndex: String
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  loginAttempts: Float
  lockUntil: String
  password: String!
}

input mutationProducerUpdateInput {
  name: String
  phone: String
  shipping_address: String
  enableAPIKey: Boolean
  apiKey: String
  apiKeyIndex: String
  email: String
  resetPasswordToken: String
  resetPasswordExpiration: String
  loginAttempts: Float
  lockUntil: String
  password: String
}

type producersRefreshedProducer {
  user: producersJWT
  refreshedToken: String
  exp: Int
}

type producersJWT {
  name: String
  email: EmailAddress!
  collection: String!
}

type producersLoginResult {
  token: String
  user: Producer
  exp: Int
}

type producersResetPassword {
  token: String
  user: Producer
}

input mutationUploadInput {
  title: String
  caption: JSON
  url: String
  filename: String
  mimeType: String
  filesize: Float
}

input mutationUploadUpdateInput {
  title: String
  caption: JSON
  url: String
  filename: String
  mimeType: String
  filesize: Float
}
