/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seasons".
 */
export interface Season {
  name?: string;
  id: string;
  start_date: string;
  end_date: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  title?: string;
  id: string;
  publishedDate?: string;
  price: number;
  inventory?: number;
  unit?: string;
  sizes: {
    title?: string;
    size?: number;
    adjustment?: number;
    id?: string;
  }[];
  seasons?: (string | Season)[];
  thumbnail?: Upload;
  description?: {
    [k: string]: unknown;
  }[];
  status?: 'draft' | 'published' | 'archived';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "uploads".
 */
export interface Upload {
  id: string;
  title?: string;
  caption?: {
    [k: string]: unknown;
  }[];
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  payment_provider_id?: string;
  payment_methods?: string;
  id: string;
  name?: string;
  phone?: string;
  shipping_address?: string;
  status?: 'active' | 'archived';
  perks?: (string | Perk)[];
  accepts_newsletter?: boolean;
  notes?: {
    [k: string]: unknown;
  }[];
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "perks".
 */
export interface Perk {
  title?: string;
  id: string;
  description?: string;
  season?: string | Season;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  email?: string;
  shipping_address?: string;
  season?: string | Season;
  placed_by?:
    | {
        value: string | Customer;
        relationTo: 'customers';
      }
    | {
        value: string | Producer;
        relationTo: 'producers';
      };
  line_items: {
    description?: string;
    quantity?: number;
    size?: number;
    product?: string | Product;
    status?: 'processing' | 'cancelled' | 'fulfilled';
    id?: string;
  }[];
  subscription?: string | Subscription;
  notes?: {
    [k: string]: unknown;
  }[];
  status?: 'processing' | 'cancelled' | 'fulfilled';
  total?: number;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "producers".
 */
export interface Producer {
  id: string;
  name?: string;
  phone?: string;
  shipping_address?: string;
  enableAPIKey?: boolean;
  apiKey?: string;
  apiKeyIndex?: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: string;
  placed_by?:
    | {
        value: string | Customer;
        relationTo: 'customers';
      }
    | {
        value: string | Producer;
        relationTo: 'producers';
      };
  schedule: {
    start_date: string;
    end_date?: string;
    interval?: string;
  };
  season?: string | Season;
  notes?: {
    [k: string]: unknown;
  }[];
  status?: 'active' | 'cancelled';
  total?: number;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "content_pages".
 */
export interface ContentPage {
  title?: string;
  id: string;
  author?: string | Producer;
  publishedDate?: string;
  index?: boolean;
  seasons?: (string | Season)[];
  content: (
    | {
        title?: string;
        id?: string;
        media?: string | Upload;
        text?: {
          [k: string]: unknown;
        }[];
        blockName?: string;
        blockType: 'Text';
      }
    | {
        title?: string;
        id?: string;
        products?: (string | Product)[];
        blockName?: string;
        blockType: 'ProductsList';
      }
  )[];
  status?: 'draft' | 'published' | 'archived';
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "history_tasks".
 */
export interface HistoryTask {
  id: string;
  description?: string;
  task: string;
  count?: number;
  product?: string | Product;
  date: string;
  season?: string | Season;
  notes?: {
    [k: string]: unknown;
  }[];
  createdAt: string;
  updatedAt: string;
}
